//
// Shipyard.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct Shipyard: Codable, JSONEncodable, Hashable {

    static let symbolRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** The symbol of the shipyard. The symbol is the same as the waypoint where the shipyard is located. */
    public var symbol: String
    /** The list of ship types available for purchase at this shipyard. */
    public var shipTypes: [ShipyardShipTypesInner]
    /** The list of recent transactions at this shipyard. */
    public var transactions: [ShipyardTransaction]?
    /** The ships that are currently available for purchase at the shipyard. */
    public var ships: [ShipyardShip]?

    public init(symbol: String, shipTypes: [ShipyardShipTypesInner], transactions: [ShipyardTransaction]? = nil, ships: [ShipyardShip]? = nil) {
        self.symbol = symbol
        self.shipTypes = shipTypes
        self.transactions = transactions
        self.ships = ships
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case symbol
        case shipTypes
        case transactions
        case ships
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(symbol, forKey: .symbol)
        try container.encode(shipTypes, forKey: .shipTypes)
        try container.encodeIfPresent(transactions, forKey: .transactions)
        try container.encodeIfPresent(ships, forKey: .ships)
    }
}

