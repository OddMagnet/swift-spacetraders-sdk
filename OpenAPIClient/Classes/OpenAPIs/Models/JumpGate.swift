//
// JumpGate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct JumpGate: Codable, JSONEncodable, Hashable {

    /** The maximum jump range of the gate. */
    public var jumpRange: Double
    /** The symbol of the faction that owns the gate. */
    public var factionSymbol: String?
    /** The systems within range of the gate that have a corresponding gate. */
    public var connectedSystems: [ConnectedSystem]

    public init(jumpRange: Double, factionSymbol: String? = nil, connectedSystems: [ConnectedSystem]) {
        self.jumpRange = jumpRange
        self.factionSymbol = factionSymbol
        self.connectedSystems = connectedSystems
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case jumpRange
        case factionSymbol
        case connectedSystems
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(jumpRange, forKey: .jumpRange)
        try container.encodeIfPresent(factionSymbol, forKey: .factionSymbol)
        try container.encode(connectedSystems, forKey: .connectedSystems)
    }
}

