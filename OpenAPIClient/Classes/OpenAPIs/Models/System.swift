//
// System.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct System: Codable, JSONEncodable, Hashable {

    static let symbolRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let sectorSymbolRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var symbol: String
    public var sectorSymbol: String
    public var type: SystemType
    public var x: Int
    public var y: Int
    public var waypoints: [SystemWaypoint]
    public var factions: [SystemFaction]

    public init(symbol: String, sectorSymbol: String, type: SystemType, x: Int, y: Int, waypoints: [SystemWaypoint], factions: [SystemFaction]) {
        self.symbol = symbol
        self.sectorSymbol = sectorSymbol
        self.type = type
        self.x = x
        self.y = y
        self.waypoints = waypoints
        self.factions = factions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case symbol
        case sectorSymbol
        case type
        case x
        case y
        case waypoints
        case factions
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(symbol, forKey: .symbol)
        try container.encode(sectorSymbol, forKey: .sectorSymbol)
        try container.encode(type, forKey: .type)
        try container.encode(x, forKey: .x)
        try container.encode(y, forKey: .y)
        try container.encode(waypoints, forKey: .waypoints)
        try container.encode(factions, forKey: .factions)
    }
}

